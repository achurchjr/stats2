export_com <- wb(country = "SSA", indicator = c("BX.GSR.TOTL.CD", "DT.COM.DPPG.CD"),
startdate = 2008, enddate = 2018) %>%
select("iso3c","date","value", "indicatorID", "country") %>%
spread(key = indicatorID, value = value) %>%
rename(ccode = iso3c,
year = date,
export = BX.GSR.TOTL.CD,
com = DT.COM.DPPG.CD) %>%
mutate(Export_in_billions = export/1000000000) %>%
mutate(Commitments_in_billions = com/1000000000) %>%
select("country", "ccode", "year", "Export_in_billions", "Commitments_in_billions")
export_com
export_com <- wb(country = "SSA", indicator = c("BX.GSR.TOTL.CD", "DT.COM.DPPG.CD"),
startdate = 2008, enddate = 2018) %>%
select("iso3c","date","value", "indicatorID", "country") %>%
spread(key = indicatorID, value = value) %>%
rename(region = iso3c,
year = date,
export = BX.GSR.TOTL.CD,
com = DT.COM.DPPG.CD) %>%
mutate(Export_in_billions = export/1000000000) %>%
mutate(Commitments_in_billions = com/1000000000) %>%
select("country", "region", "year", "Export_in_billions", "Commitments_in_billions")
export_com
ggplot(export_com, aes(x=year, y=Export_in_billions, color = blue)) +
geom_point() +
geom_line(aes(x = year, y = Commitments_in_billions, color = red)) +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal()
ggplot(export_com, aes(x=year, y=Export_in_billions), color = blue) +
geom_point() +
geom_line(aes(x = year, y = Commitments_in_billions), color = red) +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal()
ggplot(export_com, aes(x=year, y=Export_in_billions)) +
geom_point() +
geom_line(aes(x = year, y = Commitments_in_billions)) +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal()
ggplot(export_com) +
geom_line(aes(x = year, y = Export_in_billions), color = "blue")
geom_point() +
geom_line(aes(x = year, y = Commitments_in_billions)) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot() +
geom_line(aes(x = year, y = Export_in_billions), color = "blue")
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions), color = "blue")
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions)) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
p = ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions), color = "blue")
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions)) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions), color = "blue") +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions)) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
export_com <- wb(country = c("EAP", "MNA", "ECA", "SAS", "LAC", "SSA"), indicator = c("BX.GSR.TOTL.CD", "DT.COM.DPPG.CD"),
startdate = 2008, enddate = 2018) %>%
select("iso3c","date","value", "indicatorID", "country") %>%
spread(key = indicatorID, value = value) %>%
rename(region = iso3c,
year = date,
export = BX.GSR.TOTL.CD,
com = DT.COM.DPPG.CD) %>%
mutate(Export_in_billions = export/1000000000) %>%
mutate(Commitments_in_billions = com/1000000000) %>%
select("country", "region", "year", "Export_in_billions", "Commitments_in_billions")
export_com
head(export_com)
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions), color = "blue") +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions)) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions), group = region) +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions), group = region) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions, group = region)) +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions, group = region)) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
export_com <- wb(country = "SSA", indicator = c("BX.GSR.TOTL.CD", "DT.COM.DPPG.CD"),
startdate = 2008, enddate = 2018) %>%
select("iso3c","date","value", "indicatorID", "country") %>%
spread(key = indicatorID, value = value) %>%
rename(region = iso3c,
year = date,
export = BX.GSR.TOTL.CD,
com = DT.COM.DPPG.CD) %>%
mutate(Export_in_billions = export/1000000000) %>%
mutate(Commitments_in_billions = com/1000000000) %>%
select("country", "region", "year", "Export_in_billions", "Commitments_in_billions")
head(export_com)
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions, group = region)) +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions, group = region)) +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions, group = region), color="blue") +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions, group = region), color = "red") +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions, group = region), color=Export_in_billions) +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions, group = region), color = "red") +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions, group = region), color="blue") +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions, group = region), color = "red") +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
export_com <- wb(country = "LAC", indicator = c("BX.GSR.TOTL.CD", "DT.COM.DPPG.CD"),
startdate = 2008, enddate = 2018) %>%
select("iso3c","date","value", "indicatorID", "country") %>%
spread(key = indicatorID, value = value) %>%
rename(region = iso3c,
year = date,
export = BX.GSR.TOTL.CD,
com = DT.COM.DPPG.CD) %>%
mutate(Export_in_billions = export/1000000000) %>%
mutate(Commitments_in_billions = com/1000000000) %>%
select("country", "region", "year", "Export_in_billions", "Commitments_in_billions")
head(export_com)
ggplot() +
geom_line(data = export_com, aes(x = year, y = Export_in_billions, group = region), color="blue") +
geom_point() +
geom_line(data = export_com, aes(x = year, y = Commitments_in_billions, group = region), color = "red") +
labs(title="Total Commitments to Exports",
caption = "Source: International Debt Statistics",
x="Year", y="Billions") +
theme_minimal()
ggplot(debt_gni, aes(x=year, y=debt_to_gni, color = region, group = region)) +
geom_point() + geom_line() +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal() +
facet_wrap(~region, nrow = 1)
ggplot(debt_gni, aes(x=year, y=debt_to_gni, color = region, group = region)) +
geom_point() + geom_line() +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal() +
facet_wrap(~region, nrow = 6)
ggplot(debt_gni, aes(x=year, y=debt_to_gni, color = region, group = region)) +
geom_point() + geom_line() +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal() +
facet_wrap(~region, nrow = 2)
ggplot(debt_gni, aes(x=year, y=debt_to_gni, color = region, group = region)) +
geom_point() + geom_line() +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal()
head(world.cities)
library(maps)
map('world',col="grey", fill=TRUE, bg="white", lwd=0.05, mar=rep(0,4),border=0, ylim=c(-80,80) )
map('world')
library(tidyverse)
world.cities %>% filter(capital==1)
world.cities %>% filter(capital==1)
#Call API, select external debt stocks as % of GNI, and rename columns
debt_gni <- wb(country = c("EAP", "MNA", "ECA", "SAS", "LAC", "SSA"), indicator = "DT.DOD.DECT.GN.ZS",
startdate = 2018, enddate = 2019) %>%
select("iso3c","date","value", "indicatorID") %>%
spread(key = indicatorID, value = value) %>%
rename(region = iso3c,
year = date,
debt_to_gni = DT.DOD.DECT.GN.ZS) %>%
select("region", "year", "debt_to_gni")
head(debt_gni)
#Call API, select external debt stocks as % of GNI, and rename columns
debt_gni <- wb(country = "countries_only", indicator = "DT.DOD.DECT.GN.ZS",
startdate = 2018, enddate = 2019) %>%
select("iso3c","date","value", "indicatorID") %>%
spread(key = indicatorID, value = value) %>%
rename(region = iso3c,
year = date,
debt_to_gni = DT.DOD.DECT.GN.ZS) %>%
select("region", "year", "debt_to_gni")
head(debt_gni)
#Call API, select external debt stocks as % of GNI, and rename columns
debt_gni <- wb(country = "countries_only", indicator = "DT.DOD.DECT.GN.ZS",
startdate = 2018, enddate = 2019) %>%
#select("iso3c","date","value", "indicatorID") %>%
#spread(key = indicatorID, value = value) %>%
#rename(region = iso3c,
#       year = date,
#       debt_to_gni = DT.DOD.DECT.GN.ZS) %>%
#select("region", "year", "debt_to_gni")
head(debt_gni)
#Call API, select external debt stocks as % of GNI, and rename columns
debt_gni <- wb(country = "countries_only", indicator = "DT.DOD.DECT.GN.ZS",
startdate = 2018, enddate = 2019)
#select("iso3c","date","value", "indicatorID") %>%
#spread(key = indicatorID, value = value) %>%
#rename(region = iso3c,
#       year = date,
#       debt_to_gni = DT.DOD.DECT.GN.ZS) %>%
#select("region", "year", "debt_to_gni")
head(debt_gni)
#Call API, select external debt stocks as % of GNI, and rename columns
debt_gni <- wb(country = "countries_only", indicator = "DT.DOD.DECT.GN.ZS",
startdate = 2018, enddate = 2019)
select("country", "value", "indicatorID") %>%
spread(key = indicatorID, value = value) %>%
rename(debt_to_gni = DT.DOD.DECT.GN.ZS)
#Call API, select external debt stocks as % of GNI, and rename columns
debt_gni <- wb(country = "countries_only", indicator = "DT.DOD.DECT.GN.ZS",
startdate = 2018, enddate = 2019) %>%
select("country", "value", "indicatorID") %>%
spread(key = indicatorID, value = value) %>%
rename(debt_to_gni = DT.DOD.DECT.GN.ZS)
head(debt_gni)
world.cities %>%
filter(capital==1) %>%
rename(country = country.etc)
world.cities %>%
filter(capital==1) %>%
rename(country = country.etc)
world_cities <- world.cities %>%
filter(capital==1) %>%
rename(country = country.etc)
head(world_cities)
full_join(debt_gni, world_cities, by = "country")
#Only selecting country and debt_to_gni indicators
debt_gni <- wb(country = c("ARG", "BLZ", "BOL", "BRA", "COL", "CRI", "CUB", "DMA", "DOM", "ECU", "GRD", "GTM", "GUY", "HND", "HTI", "JAM", "LCA", "MEX", "NIC", "PER", "PRY", "SLV", "SUR", "VCT", "VEN"), indicator = "DT.DOD.DECT.GN.ZS", startdate = 2018, enddate = 2019) %>%
select("country", "value", "indicatorID") %>%
spread(key = indicatorID, value = value) %>%
rename(debt_to_gni = DT.DOD.DECT.GN.ZS)
head(debt_gni)
full_join(debt_gni, world_cities, by = "country")
left_join(debt_gni, world_cities, by = "country")
lac <- left_join(debt_gni, world_cities, by = "country")
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat, group = group), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + ylim(50,59) + coord_map()
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + ylim(50,59) + coord_map()
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + ylim(50,59) + coord_map()
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + coord_map()
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + ylim(50,59) + coord_map()
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + ylim(20,23) + coord_map()
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + ylim(20,23) + coord_map()
ggplot() +
geom_polygon(data = lac, aes(x = long, y = lat), fill = "grey", alpha=0.3) +
geom_point(data = lac, aes(x = long, y = lat)) +
theme_void() + ylim(100,100) + coord_map()
head(lac)
lac %>%
arrange(debt_to_gni) %>%
mutate( name=factor(name, unique(name))) %>%
ggplot() +
geom_polygon(data = lac, aes(x=long, y = lat), fill="grey", alpha=0.3) +
geom_point( aes(x=long, y=lat, size=debt_to_gni, color=debt_to_gni), alpha=0.9) +
scale_size_continuous(range=c(1,12)) +
scale_color_viridis(trans="log") +
theme_void() + ylim(50,59) + coord_map() + theme(legend.position="none")
library(viridis)
library(viridis)
lac %>%
arrange(debt_to_gni) %>%
mutate( name=factor(name, unique(name))) %>%
ggplot() +
geom_polygon(data = lac, aes(x=long, y = lat), fill="grey", alpha=0.3) +
geom_point( aes(x=long, y=lat, size=debt_to_gni, color=debt_to_gni), alpha=0.9) +
scale_size_continuous(range=c(1,12)) +
scale_color_viridis(trans="log") +
theme_void() + ylim(50,59) + coord_map() + theme(legend.position="none")
length(lac)
head(lac)
library(viridis)
lac %>%
arrange(debt_to_gni) %>%
mutate( country=factor(country, unique(country))) %>%
ggplot() +
geom_polygon(data = lac, aes(x=long, y = lat), fill="grey", alpha=0.3) +
geom_point( aes(x=long, y=lat, size=debt_to_gni, color=debt_to_gni), alpha=0.9) +
scale_size_continuous(range=c(1,12)) +
scale_color_viridis(trans="log") +
theme_void() + ylim(50,59) + coord_map() + theme(legend.position="none")
library(viridis)
lac %>%
arrange(debt_to_gni) %>%
mutate( country=factor(country, unique(country))) %>%
ggplot() +
geom_polygon(data = lac, aes(x=long, y = lat), fill="grey", alpha=0.3) +
geom_point( aes(x=long, y=lat, size=debt_to_gni, color=debt_to_gni), alpha=0.9) +
scale_size_continuous(range=c(1,12)) +
scale_color_viridis(trans="log") +
theme_void() + coord_map() + theme(legend.position="none")
library(viridis)
lac %>%
arrange(debt_to_gni) %>%
mutate( country=factor(country, unique(country))) %>%
ggplot() +
geom_polygon(data = lac, aes(x=long, y = lat), fill="grey", alpha=0.3) +
geom_point( aes(x=long, y=lat, size=debt_to_gni, color=debt_to_gni), alpha=0.9) +
scale_size_continuous(range=c(1,12)) +
scale_color_viridis(trans="log") +
theme_void() + ylim(-5000, 5000) + coord_map() + theme(legend.position="none")
library(viridis)
lac %>%
arrange(debt_to_gni) %>%
mutate( country=factor(country, unique(country))) %>%
ggplot() +
geom_polygon(data = lac, aes(x=long, y = lat), fill="grey", alpha=0.3) +
geom_point( aes(x=long, y=lat, size=debt_to_gni, color=debt_to_gni), alpha=0.9) +
scale_size_continuous(range=c(1,12)) +
scale_color_viridis(trans="log") +
theme_void() + ylim(0, 100) + coord_map() + theme(legend.position="none")
map_data("world")
map_data("world") %>% filter(region=="LAC")
map_data("world") %>% filter(region=="South America")
map_data("world") %>% filter(region=="Brazil")
library(plotly)
head(lac)
library(plotly)
lac$q <- with(lac, cut(debt_to_gni, quantile(debt_to_gni)))
levels(df$q) <- paste(c("1st", "2nd", "3rd", "4th","5th"), "Quantile")
library(plotly)
lac$q <- with(lac, cut(debt_to_gni, quantile(debt_to_gni)))
levels(lac$q) <- paste(c("1st", "2nd", "3rd", "4th","5th"), "Quantile")
lac$q <- as.ordered(lac$q)
g <- list(
scope = 'world',
projection = list(type = 'natural earth'),
showland = TRUE,
landcolor = toRGB("gray85"),
subunitwidth = 1,
countrywidth = 1,
subunitcolor = toRGB("white"),
countrycolor = toRGB("white")
)
p <- plot_geo(lac, locationmode = 'country names', sizes = c(1, 250)) %>%
add_markers(
x = ~long, y = ~lat, size = ~debt_to_gni, color = ~q, hoverinfo = "text",
text = ~paste(lac$country, "<br />", lac$debt_to_gni/1e6, " million")
) %>%
layout(title = '2014 US city populations<br>(Click legend to toggle)', geo = g)
p
#Only selecting country and debt_to_gni indicators
debt_gni <- wb(country = "countries_only", startdate = 2018, enddate = 2019) #%>%
#Only selecting country and debt_to_gni indicators
debt_gni <- wb(country = "countries_only", indicator = "DT.DOD.DECT.GN.ZS", startdate = 2018, enddate = 2019) #%>%
#select("country", "value", "indicatorID") %>%
#spread(key = indicatorID, value = value) %>%
#rename(debt_to_gni = DT.DOD.DECT.GN.ZS)
head(debt_gni)
#Only selecting country and debt_to_gni indicators
debt_gni <- wb(country = "countries_only", indicator = "DT.DOD.DECT.GN.ZS", startdate = 2018, enddate = 2019) %>%
select("country", "value", "indicatorID", "iso3c") %>%
spread(key = indicatorID, value = value) %>%
rename(debt_to_gni = DT.DOD.DECT.GN.ZS)
head(debt_gni)
library(plotly)
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(debt_gni) %>%
add_trace(
z = ~debt_to_gni, color = ~debt_to_gni, colors = 'Blues',
text = ~country, locations = ~iso3c, marker = list(line = l)
) %>%
colorbar(title = 'Debt to GNI', tickprefix = '%') %>%
layout(
title = '2018 Debt to GNI<br>Source:<a href="https://databank.worldbank.org/reports.aspx?source=international-debt-statistics">International Debt Statistics</a>',
geo = g
)
p
library(plotly)
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(debt_gni) %>%
add_trace(
z = ~debt_to_gni, color = ~debt_to_gni, colors = 'Blues',
text = ~country, locations = ~iso3c, marker = list(line = l)
) %>%
colorbar(title = 'Debt to GNI', tickprefix = '%') %>%
layout(
title = '2018 Debt to GNI<br>Source:<a href="https://databank.worldbank.org/reports.aspx?source=international-debt-statistics">International Debt Statistics</a>',
geo = g
)
p
library(plotly)
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
)
p <- plot_geo(debt_gni) %>%
add_trace(
z = ~debt_to_gni, color = ~debt_to_gni, colors = 'Reds',
text = ~country, locations = ~iso3c, marker = list(line = l)
) %>%
colorbar(title = 'Debt to GNI', tickprefix = '%') %>%
layout(
title = '2018 Debt to GNI<br>Source:<a href="https://databank.worldbank.org/reports.aspx?source=international-debt-statistics">International Debt Statistics</a>',
geo = g
)
p
debt_gni
test_graph <- ggplot(debt_gni, aes(x=year, y=debt_to_gni, color = region, group = region)) +
geom_point() + geom_line() +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal()
test_plot <- ggplotly(test_graph)
#Call API, select external debt stocks as % of GNI, and rename columns
debt_gni <- wb(country = c("EAP", "MNA", "ECA", "SAS", "LAC", "SSA"), indicator = "DT.DOD.DECT.GN.ZS",
startdate = 2008, enddate = 2018) %>%
select("iso3c","date","value", "indicatorID") %>%
spread(key = indicatorID, value = value) %>%
rename(region = iso3c,
year = date,
debt_to_gni = DT.DOD.DECT.GN.ZS) %>%
select("region", "year", "debt_to_gni")
head(debt_gni)
test_graph <- ggplot(debt_gni, aes(x=year, y=debt_to_gni, color = region, group = region)) +
geom_point() + geom_line() +
labs(title="Total external debt stocks to Gross National Income (GNI)",
caption = "Source: International Debt Statistics",
x="Year", y="Percent of GNI") +
theme_minimal()
test_plot <- ggplotly(test_graph)
test_plot
